---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import { dateRange } from "@lib/utils";
import { WORK } from "@consts";

const collection = (await getCollection("work"))
  .sort((a, b) => new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf());

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Work
      </div>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Skills
          </h5>
        </div>
        <ul class="flex flex-col space-y-4">
          <li>
            <div class="font-semibold text-black dark:text-white">
              Programming Languages
            </div>
            <div class="text-sm opacity-75">
              Python, Java, TypeScript, Rust
            </div>
          </li>
          <li>
            <div class="font-semibold text-black dark:text-white">
              Frameworks
            </div>
            <div class="text-sm opacity-75">
              FastAPI, Quarkus, Celery, Temporal, Spark
            </div>
          </li>
          <li>
            <div class="font-semibold text-black dark:text-white">
              Others
            </div>
            <div class="text-sm opacity-75">
              AWS, Cloudflare, Kubernetes, GIT, Postgres, Redis, RabbitMQ, Docker, Grafana, Elastic Search
            </div>
          </li>
        </ul>
      </section>

      <ul class="flex flex-col space-y-4">
        { 
          work.map(entry => (
            <li class="animate">
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <div class="font-semibold text-black dark:text-white">
                {entry.data.company}
              </div>
              <div class="text-sm opacity-75">
                {entry.data.role}
              </div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))
        }
      </ul>
<!-- 
      <ul class="animate flex flex-col gap-4">

      </ul> -->
    </div>
  </Container>
</PageLayout>
